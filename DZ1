#Задание 1
import zipfile
import json
import sqlite3
from pathlib import Path
connection = sqlite3.connect('C:\DB_sqlite\hw1.db')
cursor = connection.cursor()
create_table = """
CREATE TABLE IF NOT EXISTS okved(
    code TEXT,
    parent_code TEXT, 
    section TEXT, 
    name TEXT, 
    comment TEXT
 )
"""
cursor.execute(create_table)
connection.commit()
with zipfile.ZipFile('C:\Python\dz1\okved_2.json.zip', 'r') as zipobj:
    file_names = zipobj.namelist()
    for name in file_names:
        zipobj.extract(name)
        with open(name, 'r',encoding='utf-8') as f:
            val = json.loads(f.read())
            print(type(val))
    path = Path(name)
    path.unlink()
insert_rows = """
INSERT INTO okved (code, parent_code, section, name, comment)
VALUES (:code, :parent_code, :section, :name, :comment)
"""
cursor.executemany(insert_rows, val)
connection.commit()
cursor.close()
connection.close()


#Задание 2
import zipfile
import json
from pathlib import Path
import sqlite3
fdata=[]
with zipfile.ZipFile('C:\Python\dz1\egrul.json.zip', 'r') as zipobj:
    file_names = zipobj.namelist()
    for name in file_names:
        zipobj.extract(name)
        with open(name,'r',encoding='utf-8') as f:
            data=json.loads(f.read())
            for idict in data:
                if ('СвОКВЭД' in idict['data'].keys() 
                    and 'СвОКВЭДОсн' in idict['data']['СвОКВЭД'].keys()
                    and idict['data']['СвОКВЭД']['СвОКВЭДОсн']['КодОКВЭД'][:2]=='61'):
                    dicttemp={}
                    dicttemp['name']=idict['name']
                    dicttemp['inn']=idict['inn']
                    dicttemp['ogrn']=idict['ogrn']
                    dicttemp['kod_okved']=idict['data']['СвОКВЭД']['СвОКВЭДОсн']['КодОКВЭД']
                    dicttemp['title_okved']=idict['data']['СвОКВЭД']['СвОКВЭДОсн']['НаимОКВЭД']
                    fdata.append(dicttemp)
        path = Path(name)
        path.unlink()
connection = sqlite3.connect('C:\DB_sqlite\hw1.db')
cursor = connection.cursor()
drop_table="""DROP TABLE IF EXISTS telecom_companies"""
cursor.execute(drop_table)
connection.commit()
create_table = """
CREATE TABLE telecom_companies
(
    name TEXT,
    inn INTEGER, 
    ogrn INTEGER, 
    kod_okved TEXT, 
    title_okved TEXT
 )
"""
cursor.execute(create_table)
connection.commit()
insert_rows = """
INSERT INTO telecom_companies (name, inn, ogrn, kod_okved, title_okved)
VALUES (:name, :inn, :ogrn, :kod_okved, :title_okved)
"""
cursor.executemany(insert_rows, fdata)
connection.commit()
cursor.close()
connection.close()
